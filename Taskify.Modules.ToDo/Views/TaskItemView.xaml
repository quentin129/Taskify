<UserControl x:Class="Taskify.Modules.ToDo.Views.TaskItemView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Taskify.Modules.ToDo.Views"
             xmlns:helper="clr-namespace:Taskify.Modules.ToDo.Helper"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:prism="http://prismlibrary.com/"
             Height="50"
             mc:Ignorable="d">
    <UserControl.Resources>
        <helper:PriorityToColorConverter x:Key="PriorityToColorConverter" />
    </UserControl.Resources>

    <Border Background="#C4DAD2"
            CornerRadius="8">
        <Border.ContextMenu>
            <ContextMenu>
                <MenuItem Header="Test 1"></MenuItem>
                <MenuItem Header="Test 2"></MenuItem>
            </ContextMenu>
        </Border.ContextMenu>
        <Border.Style>
            <Style TargetType="Border">
                <Setter Property="Background"
                        Value="#C4DAD2" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                             Value="True">
                        <Setter Property="Background"
                                Value="Transparent" />
                        <!-- Lighter Green -->
                        <Setter Property="BorderBrush"
                                Value="#16423C" />
                        <Setter Property="BorderThickness"
                                Value="1.5" /> 
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3"
                                  x:Name="cdPrioBorder" />
                <ColumnDefinition Width="35"
                                  x:Name="cdCheckbox" />
                <ColumnDefinition MinWidth="125"
                                  x:Name="cdTitle" />
                <ColumnDefinition Width="200"
                                  x:Name="cdDate" />
                <ColumnDefinition Width="25"
                                  x:Name="cdDetailsAndEdit" />
                <ColumnDefinition Width="25"
                                  x:Name="cdRemove" />
                <ColumnDefinition Width="10"
                                  x:Name="cdSpace" />
            </Grid.ColumnDefinitions>
            <Border HorizontalAlignment="Left"
                    Width="4"
                    CornerRadius="8 0 0 8"
                    Grid.Column="0"
                    Background="{Binding Priority, Converter={StaticResource PriorityToColorConverter}}" />

            <CheckBox VerticalAlignment="Center"
                      HorizontalAlignment="Center"
                      Style="{StaticResource ToDoItemCheckBoxStyle}"
                      Grid.Column="1"
                      Width="20"
                      Height="20"
                      IsChecked="{Binding IsCompleted}" />

            <!-- TextBlock with Title of the Task and DataTrigger for the Strikethrough Effect -->
            <TextBlock Grid.Column="2"
                       Text="{Binding Title}"
                       FontFamily="Roboto"
                       FontSize="14"
                       Margin="5 0 0 0"
                       x:Name="tbTitle"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Left">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <!-- DataTrigger that applies Strikethrough when the task is marked as completed -->
                            <DataTrigger Binding="{Binding IsCompleted}"
                                         Value="True">
                                <Setter Property="TextDecorations"
                                        Value="{x:Static TextDecorations.Strikethrough}" />
                                <Setter Property="Opacity"
                                        Value="0.5" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsCompleted}"
                                         Value="False">
                                <Setter Property="TextDecorations"
                                        Value="{x:Null}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>

            <TextBlock Grid.Column="3"
                       Text="{Binding Deadline, StringFormat='{}{0:MMM dd}'}"
                       FontFamily="Roboto"
                       FontSize="14"
                       Margin="5 0 0 0"
                       x:Name="tbDeadline"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"></TextBlock>

            <!-- Buttons for Edit and Remove -->
            <Button Grid.Column="4"
                    Style="{StaticResource ToDoItemEditButton}"
                    Command="{Binding OpenDetailsCommand}"
                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext}"
                    BorderThickness="0"
                    Margin="2"
                    Background="Transparent"
                    Foreground="#16423C" />

            <Button Grid.Column="5"
                    Style="{StaticResource ToDoItemRemoveButton}"
                    Command="{Binding DeleteTaskCommand}"
                    BorderThickness="0"
                    Margin="6"
                    Background="Transparent"
                    Foreground="#16423C" />
        </Grid>
    </Border>
</UserControl>
